#!/usr/bin/env python3
#This is a python code used to extract data for 'RAINC','RAINNC' and 'XTIME' from WRF output files which are in netCDF format so as to plot a graph of time against the total accumulated precipitation
#Total accumulated precipitation = RAINC + RAINNC

#Import libraries
import netCDF4
import numpy as np
import matplotlib.pyplot as plt

#Opening WRF output file which is in netcdf format
f = netCDF4.Dataset('/home/neda/wrfv4/WRF/test/em_real/wrfout_d05_2021-10-01_00:00:00')
print(f)

#get all variable names
print(f.variables.keys())

for d in f.dimensions.items():
  print(d)

# Retrieving data for RAINC (ACCUMULATED TOTAL CUMULUS PRECIPITATION)
rainc_class = f.variables['RAINC']
rainc = rainc_class[:]

print("type(rainc_class):")
print(type(rainc_class))
print("rainc_class.shape:")
print(rainc_class.shape)
print("rainc_class.dimensions:")
print(rainc_class.dimensions)
print("rainc_class.dtype:")
print(rainc_class.dtype)
print("rainc_class:")
print(rainc_class)
print("rainc.shape:")
print(rainc.shape)
print("rainc:")
print(rainc)
print()

# Retrieving data for RAINNC (ACCUMULATED TOTAL GRID SCALE PRECIPITATION)
rainnc_class = f.variables['RAINNC']
rainnc = rainnc_class[:]

print("type(rainnc_class):")
print(type(rainnc_class))
print("rainnc_class.shape:")
print(rainnc_class.shape)
print("rainnc_class.dimensions:")
print(rainnc_class.dimensions)
print("rainnc_class.dtype:")
print(rainnc_class.dtype)
print("rainnc_class:")
print(rainc_class)
print("rainnc.shape:")
print(rainnc.shape)
print("rainnc:")
print(rainnc)
print()

#Retrieving data for time
time_class = f.variables['XTIME']
time = time_class[:]/60/24

print("type(time_class):")
print(type(time_class))
print("time_class.shape:")
print(time_class.shape)
print("time_class.dtype:")
print(time_class.dtype)
print("time_class:")
print(time_class)
print("time.shape:")
print(time.shape)
print("time:")
print(time)
print()

#Both RAINC and RAINNC have shape (29, 111, 111)
sum_layer = np.zeros((29,))
for i in range(29):
    for j in range(111):
        for k in range(111):
            sum = rainc[i][j][k] + rainnc[i][j][k]
            sum_layer[i] = sum_layer[i] + sum

print("sum_layer :")
print(sum_layer)

#loop over time which has shape (29,)
for i in range(29):
    for j in range(111):
        for k in range(111):
            sum = rainc[i][j][k] + rainnc[i][j][k]

# Title for the plot in black color
plt.title('Total accumulated precipitation', color='k')

# Label x axis
plt.xlabel('Time (day)')

# Label y axis
plt.ylabel('Precipitation (mm)')

#plt.plot(time, sum_layer)
plt.plot(time, sum_layer)
plt.grid()

# Display the graph
plt.show()







